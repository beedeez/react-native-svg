{"version":3,"sources":["ReactNativeSVG.web.ts"],"names":["createElement","cE","ucE","prepare","self","props","translate","scale","rotation","skewX","skewY","originX","originY","fontFamily","fontSize","fontWeight","fontStyle","style","forwardedRef","onPress","onPressIn","onPressOut","onLongPress","rest","hasTouchableProperty","clean","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","onResponderGrant","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","transform","push","length","join","ref","styles","getBoundingClientRect","node","isElement","nodeType","measureLayout","callback","relativeNode","parentNode","setTimeout","relativeRect","height","left","top","width","x","y","remeasure","tag","state","touchable","responderID","_handleQueryLayout","WebShape","context","_remeasureMetricsOnActivation","bind","React","Component","Circle","ClipPath","Defs","Ellipse","G","Image","Line","LinearGradient","Path","Polygon","Polyline","RadialGradient","Rect","Stop","Svg","Symbol","Text","TSpan","TextPath","Use","Mask","ForeignObject","Marker","Pattern"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport * as React from 'react';\nimport {\n\tGestureResponderEvent,\n\t// @ts-ignore\n\tunstable_createElement as ucE,\n\t// @ts-ignore\n\tcreateElement as cE,\n} from 'react-native';\nimport { NumberArray, NumberProp } from './lib/extract/types';\nimport SvgTouchableMixin from './lib/SvgTouchableMixin';\nimport { resolve } from './lib/resolve';\nimport { parse, SvgAst, SvgFromUri, SvgFromXml, SvgUri, SvgXml } from './xml';\nimport {\n\tSvgCss,\n\tSvgCssUri,\n\tSvgWithCss,\n\tSvgWithCssUri,\n\tinlineStyles,\n} from './css';\n\nconst createElement = cE || ucE;\n\ntype BlurEvent = Object;\ntype FocusEvent = Object;\ntype PressEvent = Object;\ntype LayoutEvent = Object;\ntype EdgeInsetsProp = Object;\n\ninterface BaseProps {\n\taccessible?: boolean;\n\taccessibilityLabel?: string;\n\taccessibilityHint?: string;\n\taccessibilityIgnoresInvertColors?: boolean;\n\taccessibilityRole?: string;\n\taccessibilityState?: Object;\n\tdelayLongPress?: number;\n\tdelayPressIn?: number;\n\tdelayPressOut?: number;\n\tdisabled?: boolean;\n\thitSlop?: EdgeInsetsProp;\n\tnativeID?: string;\n\ttouchSoundDisabled?: boolean;\n\tonBlur?: (e: BlurEvent) => void;\n\tonFocus?: (e: FocusEvent) => void;\n\tonLayout?: (event: LayoutEvent) => object;\n\tonLongPress?: (event: PressEvent) => object;\n\tonClick?: (event: PressEvent) => object;\n\tonPress?: (event: PressEvent) => object;\n\tonPressIn?: (event: PressEvent) => object;\n\tonPressOut?: (event: PressEvent) => object;\n\tpressRetentionOffset?: EdgeInsetsProp;\n\trejectResponderTermination?: boolean;\n\n\ttranslate: NumberArray;\n\tscale: NumberArray;\n\trotation: NumberArray;\n\tskewX: NumberProp;\n\tskewY: NumberProp;\n\toriginX: NumberProp;\n\toriginY: NumberProp;\n\n\tfontStyle?: string;\n\tfontWeight?: NumberProp;\n\tfontSize?: NumberProp;\n\tfontFamily?: string;\n\tforwardedRef: {};\n\tstyle: Iterable<{}>;\n}\n\n/**\n * `react-native-svg` supports additional props that aren't defined in the spec.\n * This function replaces them in a spec conforming manner.\n *\n * @param {WebShape} self Instance given to us.\n * @param {Object?} props Optional overridden props given to us.\n * @returns {Object} Cleaned props object.\n * @private\n */\nconst prepare = <T extends BaseProps>(\n\tself: WebShape<T>,\n\tprops = self.props,\n) => {\n\tconst {\n\t\ttranslate,\n\t\tscale,\n\t\trotation,\n\t\tskewX,\n\t\tskewY,\n\t\toriginX,\n\t\toriginY,\n\t\tfontFamily,\n\t\tfontSize,\n\t\tfontWeight,\n\t\tfontStyle,\n\t\tstyle,\n\t\tforwardedRef,\n\t\tonPress,\n\t\tonPressIn,\n\t\tonPressOut,\n\t\tonLongPress,\n\t\t// @ts-ignore\n\t\t...rest\n\t} = props;\n\tconst hasTouchableProperty =\n\t\tonPress || onPressIn || onPressOut || onLongPress;\n\tconst clean: {\n\t\tonStartShouldSetResponder?: (e: GestureResponderEvent) => boolean;\n\t\tonResponderMove?: (e: GestureResponderEvent) => void;\n\t\tonResponderGrant?: (e: GestureResponderEvent) => void;\n\t\tonResponderRelease?: (e: GestureResponderEvent) => void;\n\t\tonResponderTerminate?: (e: GestureResponderEvent) => void;\n\t\tonResponderTerminationRequest?: (e: GestureResponderEvent) => boolean;\n\t\ttransform?: string;\n\t\tstyle?: {};\n\t\tref?: {};\n\t} = {\n\t\t...(hasTouchableProperty\n\t\t\t? {\n\t\t\t\tonStartShouldSetResponder:\n\t\t\t\t\tself.touchableHandleStartShouldSetResponder,\n\t\t\t\tonResponderTerminationRequest:\n\t\t\t\t\tself.touchableHandleResponderTerminationRequest,\n\t\t\t\tonResponderGrant: self.touchableHandleResponderGrant,\n\t\t\t\tonResponderMove: self.touchableHandleResponderMove,\n\t\t\t\tonResponderRelease: self.touchableHandleResponderRelease,\n\t\t\t\tonResponderTerminate: self.touchableHandleResponderTerminate,\n\t\t\t}\n\t\t\t: null),\n\t\t...rest,\n\t};\n\n\tconst transform = [];\n\n\tif (originX != null || originY != null) {\n\t\ttransform.push(`translate(${originX || 0}, ${originY || 0})`);\n\t}\n\tif (translate != null) {\n\t\ttransform.push(`translate(${translate})`);\n\t}\n\tif (scale != null) {\n\t\ttransform.push(`scale(${scale})`);\n\t}\n\t// rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n\tif (rotation != null) {\n\t\ttransform.push(`rotate(${rotation})`);\n\t}\n\tif (skewX != null) {\n\t\ttransform.push(`skewX(${skewX})`);\n\t}\n\tif (skewY != null) {\n\t\ttransform.push(`skewY(${skewY})`);\n\t}\n\tif (originX != null || originY != null) {\n\t\ttransform.push(`translate(${-originX || 0}, ${-originY || 0})`);\n\t}\n\n\tif (transform.length) {\n\t\tclean.transform = transform.join(' ');\n\t}\n\n\tif (forwardedRef) {\n\t\tclean.ref = forwardedRef;\n\t}\n\n\tconst styles: {\n\t\tfontStyle?: string;\n\t\tfontFamily?: string;\n\t\tfontSize?: NumberProp;\n\t\tfontWeight?: NumberProp;\n\t} = {};\n\n\tif (fontFamily != null) {\n\t\tstyles.fontFamily = fontFamily;\n\t}\n\tif (fontSize != null) {\n\t\tstyles.fontSize = fontSize;\n\t}\n\tif (fontWeight != null) {\n\t\tstyles.fontWeight = fontWeight;\n\t}\n\tif (fontStyle != null) {\n\t\tstyles.fontStyle = fontStyle;\n\t}\n\n\tclean.style = resolve(style, styles);\n\n\treturn clean;\n};\n\nconst getBoundingClientRect = (node: SVGElement) => {\n\tif (node) {\n\t\t// @ts-ignore\n\t\tconst isElement = node.nodeType === 1; /* Node.ELEMENT_NODE */\n\t\t// @ts-ignore\n\t\tif (isElement && typeof node.getBoundingClientRect === 'function') {\n\t\t\t// @ts-ignore\n\t\t\treturn node.getBoundingClientRect();\n\t\t}\n\t}\n};\n\nconst measureLayout = (\n\tnode: SVGElement,\n\tcallback: (\n\t\tx: number,\n\t\ty: number,\n\t\twidth: number,\n\t\theight: number,\n\t\tleft: number,\n\t\ttop: number,\n\t) => void,\n) => {\n\t// @ts-ignore\n\tconst relativeNode = node && node.parentNode;\n\tif (relativeNode) {\n\t\tsetTimeout(() => {\n\t\t\t// @ts-ignore\n\t\t\tconst relativeRect = getBoundingClientRect(relativeNode);\n\t\t\tconst { height, left, top, width } = getBoundingClientRect(node);\n\t\t\tconst x = left - relativeRect.left;\n\t\t\tconst y = top - relativeRect.top;\n\t\t\tcallback(x, y, width, height, left, top);\n\t\t}, 0);\n\t}\n};\n\nfunction remeasure() {\n\t// @ts-ignore\n\tconst tag = this.state.touchable.responderID;\n\tif (tag == null) {\n\t\treturn;\n\t}\n\t// @ts-ignore\n\tmeasureLayout(tag, this._handleQueryLayout);\n}\n\nexport class WebShape<\n\tP extends BaseProps = BaseProps,\n\tC = {}\n\t> extends React.Component<P, C> {\n\t[x: string]: unknown;\n\t_remeasureMetricsOnActivation: () => void;\n\ttouchableHandleStartShouldSetResponder?: (\n\t\te: GestureResponderEvent,\n\t) => boolean;\n\ttouchableHandleResponderMove?: (e: GestureResponderEvent) => void;\n\ttouchableHandleResponderGrant?: (e: GestureResponderEvent) => void;\n\ttouchableHandleResponderRelease?: (e: GestureResponderEvent) => void;\n\ttouchableHandleResponderTerminate?: (e: GestureResponderEvent) => void;\n\ttouchableHandleResponderTerminationRequest?: (\n\t\te: GestureResponderEvent,\n\t) => boolean;\n\tconstructor(props: P, context: C) {\n\t\tsuper(props, context);\n\t\tSvgTouchableMixin(this);\n\t\tthis._remeasureMetricsOnActivation = remeasure.bind(this);\n\t}\n}\n\nexport class Circle extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('circle', prepare(this));\n\t}\n}\n\nexport class ClipPath extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('clipPath', prepare(this));\n\t}\n}\n\nexport class Defs extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('defs', prepare(this));\n\t}\n}\n\nexport class Ellipse extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('ellipse', prepare(this));\n\t}\n}\n\nexport class G extends WebShape<\n\tBaseProps & {\n\t\tx?: NumberProp;\n\t\ty?: NumberProp;\n\t\ttranslate?: string;\n\t}\n\t> {\n\trender(): JSX.Element {\n\t\tconst { x, y, ...rest } = this.props;\n\n\t\tif ((x || y) && !rest.translate) {\n\t\t\trest.translate = `${x || 0}, ${y || 0}`;\n\t\t}\n\n\t\treturn createElement('g', prepare(this, rest));\n\t}\n}\n\nexport class Image extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('image', prepare(this));\n\t}\n}\n\nexport class Line extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('line', prepare(this));\n\t}\n}\n\nexport class LinearGradient extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('linearGradient', prepare(this));\n\t}\n}\n\nexport class Path extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('path', prepare(this));\n\t}\n}\n\nexport class Polygon extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('polygon', prepare(this));\n\t}\n}\n\nexport class Polyline extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('polyline', prepare(this));\n\t}\n}\n\nexport class RadialGradient extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('radialGradient', prepare(this));\n\t}\n}\n\nexport class Rect extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('rect', prepare(this));\n\t}\n}\n\nexport class Stop extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('stop', prepare(this));\n\t}\n}\n\nexport class Svg extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('svg', prepare(this));\n\t}\n}\n\nexport class Symbol extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('symbol', prepare(this));\n\t}\n}\n\nexport class Text extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('text', prepare(this));\n\t}\n}\n\nexport class TSpan extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('tspan', prepare(this));\n\t}\n}\n\nexport class TextPath extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('textPath', prepare(this));\n\t}\n}\n\nexport class Use extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('use', prepare(this));\n\t}\n}\n\nexport class Mask extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('mask', prepare(this));\n\t}\n}\n\nexport class ForeignObject extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('foreignObject', prepare(this));\n\t}\n}\n\nexport class Marker extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('marker', prepare(this));\n\t}\n}\n\nexport class Pattern extends WebShape {\n\trender(): JSX.Element {\n\t\treturn createElement('pattern', prepare(this));\n\t}\n}\n\nexport {\n\tparse,\n\tSvgAst,\n\tSvgFromUri,\n\tSvgFromXml,\n\tSvgUri,\n\tSvgXml,\n\tSvgCss,\n\tSvgCssUri,\n\tSvgWithCss,\n\tSvgWithCssUri,\n\tinlineStyles,\n};\n\nexport default Svg;\n"]}